version: '2.2'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: es01
    hostname: elasticsearch
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    healthcheck:
      test: ["CMD", "curl","-s" ,"-f", "http://localhost:9200/_cat/health"]
    networks:
      - elastic

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
    networks:
      - elastic

  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03:/usr/share/elasticsearch/data
    networks:
      - elastic

  kib01:
    image: docker.elastic.co/kibana/kibana:7.14.0
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: '["http://es01:9200","http://es02:9200","http://es03:9200"]'
    depends_on:
      es01: { condition: service_healthy }
    networks:
      - elastic

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.14.0
    container_name: apm-srv
    hostname: apmserver
    ports:
        - "8200:8200"
        - "6060:6060"
    command: >
        apm-server -e
        -E apm-server.rum.enabled=true
        -E apm-server.host=0.0.0.0:8200
        -E setup.kibana.host=kib01:5601
        -E output.elasticsearch.hosts=["http://es01:9200"]
    cap_drop:
        - ALL
    cap_add:
        - CHOWN
        - DAC_OVERRIDE
        - SETGID
        - SETUID
    logging:
        driver: 'json-file'
        options:
            max-size: '2m'
            max-file: '5'
    depends_on:
      es01: { condition: service_healthy }
    networks:
        - elastic

  hbeat:
    image: docker.elastic.co/beats/heartbeat:7.14.0
    container_name: hbeat
    environment:
      - setup.kibana.host=kibana:5601
      - output.elasticsearch.hosts=["elasticsearch:9200"]
    command: heartbeat -e -strict.perms=false
    volumes: 
      - ./heartbeat.yml:/usr/share/heartbeat/heartbeat.yml:ro
    depends_on:
      es01: { condition: service_healthy }
    networks:
      - elastic
  
  weather-api:
    container_name: weather-api
    hostname: wapi
    build:
      context: ../
      dockerfile: Dockerfile
    ports:
      - "5001:80"
    networks:
      - elastic

volumes:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local

networks:
  elastic:
    driver: bridge